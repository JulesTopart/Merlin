//? #version 430
#ifndef INCLUDE_NNS_GLSL
#define INCLUDE_NNS_GLSL
//?#include "../common/constants.comp"

struct Bin {
	uint count;
	uint sum;
	uint csum;
	uint index;
};

layout(std430) buffer BinBuffer {
	Bin bins[];
};

uvec3 getBinCoord(vec3 position) {
	position.xyz -= boundaryMin;
	uvec3 bin3D = uvec3(position / binSize);
	bin3D.x = max( min(bin3D.x, binMax.x -1), 0);
	bin3D.y = max( min(bin3D.y, binMax.y -1), 0);
	bin3D.z = max( min(bin3D.z, binMax.z -1), 0);
	return bin3D;
}

uint getBinIndexFromCoord(uvec3 coord) {
	return (coord.z * binMax.x * binMax.y) + (coord.y * binMax.x) + coord.x;
}

uint getBinIndex(vec3 position) {
	uvec3 bin3D = getBinCoord(position);
    return getBinIndexFromCoord(bin3D);
}

uvec3 getBinCoordFromIndex(uint index) {
	uint z = index / (binMax.x * binMax.y);
	index -= (z * binMax.x * binMax.y);
	uint y = index / binMax.x;
	uint x = index % binMax.x;
	return uvec3(x, y, z);
}


#define OVERNNS_END }}}}}

#define OVERNNS {\
uvec3 binIndexVec = getBinCoord(position);\
ivec3 minBound = ivec3( max( binIndexVec.x - 1, 0), max(binIndexVec.y - 1, 0), max(binIndexVec.z - 1, 0));\
ivec3 maxBound = ivec3( min( binIndexVec.x + 1, binMax.x - 1) , min(binIndexVec.y + 1, binMax.y - 1), min(binIndexVec.z + 1, binMax.z - 1));\
for (int z = minBound.z; z <= maxBound.z; z++) {\
	for (int y = minBound.y; y <= maxBound.y; y++) {\
		for (int x = minBound.x; x <= maxBound.x; x++) {\
			uint cindex = getBinIndexFromCoord(uvec3(x, y, z));\
			if (bins[cindex].count == 0) continue;\
			for (uint j = bins[cindex].sum - bins[cindex].count; j < min(bins[cindex].sum, bins[cindex].sum - bins[cindex].count + MAXNN); j++) {\
				if (j >= numParticles) continue;

/* Optimized
#define OVERNNS_END }}}}}

#define OVERNNS {\
uvec2 binIndexVec = getBinCoord(position);\
ivec2 minBound = ivec2( max( binIndexVec.x - 1, 0), max(binIndexVec.y - 1, 0));\
ivec2 maxBound = ivec2( min( binIndexVec.x + 1, binMax.x - 1) , min(binIndexVec.y + 1, binMax.y - 1));\
for (int y = minBound.y; y <= maxBound.y; y++) {\
    for (int xBlock = minBound.x; xBlock <= maxBound.x; xBlock += 3) {\
        int xEnd = min(xBlock + 2, maxBound.x);\
        for (int x = xBlock; x <= xEnd; x++) {\
            uint cindex = getBinIndexFromCoord(uvec2(x, y));\
            if (bins[cindex].count == 0) continue;\
            for (uint j = bins[cindex].sum - bins[cindex].count; j < min(bins[cindex].sum, bins[cindex].sum - bins[cindex].count + MAXNN); j++) {\
                if (j >= numParticles) continue;
*/



#endif// INCLUDE_BUFFERS_HLSL