//? #version 430
#ifndef INCLUDE_NNS_GLSL
#define INCLUDE_NNS_GLSL
//?#include "../common/constants.comp"

struct Bin {
	uint count;
	uint sum;
	uint csum;
	uint index;
};

layout(std430) buffer BinBuffer {
	Bin bins[];
};


uvec2 getBinCoord(vec2 position) {
	position.xy -= boundaryMin;
	uvec2 bin3D = uvec2(position / binSize);
	bin3D.x = max( min(bin3D.x, binMax.x -1), 0);
	bin3D.y = max( min(bin3D.y, binMax.y -1), 0);
	return bin3D;
}

uint getBinIndexFromCoord(uvec2 coord) {
	return min(max((coord.y * binMax.x) + coord.x,0),binCount);
}   

uint getBinIndex(vec2 position) {
	uvec2 bin2D = getBinCoord(position);
    return getBinIndexFromCoord(bin2D);
}

uvec2 getBinCoordFromIndex(uint index) {
	uint y = index / binMax.x;
	uint x = index % binMax.x;
	return uvec2(x, y);
}

#define OVERNNS {\
uvec2 binIndexVec = getBinCoord(particles[i].position);\
ivec2 minBound = ivec2( max( binIndexVec.x - 1, 0), max(binIndexVec.y - 1, 0));\
ivec2 maxBound = ivec2( min( binIndexVec.x + 1, binMax.x - 1) , min(binIndexVec.y + 1, binMax.y - 1));\
for (int y = minBound.y; y <= maxBound.y; y++) {\
    for (int x = minBound.x; x <= maxBound.x; x++) {\
        uint cindex = getBinIndexFromCoord(uvec2(x, y));\
        if (bins[cindex].count == 0) continue;\
        uint ns = bins[cindex].count;\
        uint st = bins[cindex].sum - ns;\
        for (uint j = st; j < st + min(ns, MAXNN); j++) {\
            if (j == i || j >= numParticles) continue;

#define OVERNNS_END }}}}


#define OVERNNS_I {\
uvec2 binIndexVec = getBinCoord(particles[i].position);\
ivec2 minBound = ivec2( max( binIndexVec.x - 1, 0), max(binIndexVec.y - 1, 0));\
ivec2 maxBound = ivec2( min( binIndexVec.x + 1, binMax.x - 1) , min(binIndexVec.y + 1, binMax.y - 1));\
for (int y = minBound.y; y <= maxBound.y; y++) {\
    for (int x = minBound.x; x <= maxBound.x; x++) {\
        uint cindex = getBinIndexFromCoord(uvec2(x, y));\
        if (bins[cindex].count == 0) continue;\
        uint ns = bins[cindex].count;\
        uint st = bins[cindex].sum - ns;\
        for (uint j = st; j < st + min(ns, MAXNN); j++) {\
            if ( j >= numParticles) continue;


#endif// INCLUDE_BUFFERS_HLSL